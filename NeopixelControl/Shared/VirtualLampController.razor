@using Neopixel.Client
@using System.Drawing
@using Microsoft.AspNetCore.Components
@using NeopixelControl.Data

<h1>Virtual Lamps</h1>

Lamp Distance: <input class="e-slider slider" type="range" min="0" max="30" size="80" @bind="Data.LampDistance"/>@Data.LampDistance<br>
Lamp Width:    <input class="e-slider slider" type="range" min="0" max="30" size="80" @bind="Data.LampWidth"/>@Data.LampWidth<br/>
Lamp Color:    <input type="color" @bind="Data.LampColor"/><br/>
Auto Update:   <input type="checkbox" @bind="Data.AutoUpdate" /><br/>
Use Transaction:   <input type="checkbox" @bind="Data.UseTransaction" /><br/>
<button class="btn btn-primary" @onclick="Update">Update</button>

@code {

    [Parameter]
    public NeopixelClient NeopixelClient { get; set; }
    
    public VirtualLampControllerData Data { get; set; }

    protected override void OnInitialized()
    {
        Data = VirtualLampControllerData.LoadData();
        Data.OnPropertyChange += OnChange;
    }

    public void Update()
    {
        Stripe stripe = NeopixelClient.Stripe;

        Pixel color = ColorTranslator.FromHtml(Data.LampColor);

        NeopixelClient.IsTransacting = Data.UseTransaction;
        
        NeopixelClient.Fill(Color.Black);

        for (int i = 0; i < stripe.PixelCount; i++)
        {
            if (i % (Data.LampWidth + Data.LampDistance) < Data.LampWidth)
            {
                stripe[i] = color;
            }
        }
        
        NeopixelClient.IsTransacting = false;
    }


    private void OnChange()
    {
        if (!Data.AutoUpdate)
            return;

        Update();
        
        Data.SaveData();
    }
}